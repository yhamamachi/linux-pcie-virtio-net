#!/bin/sh
#
# Start the endpoint function....
#

case "$1" in
  start)
    sysctl net.core.rmem_max=1048576
    sysctl net.core.wmem_max=1048576
    echo "Starting Endpoint function..."
    mount -t configfs none /sys/kernel/config
    export IBV_CONFIG_DIR=/etc/libibverbs.d/
    cd /sys/kernel/config/pci_ep
    if [ "$(ls controllers/)" != "" ]; then
        FUNCTION_NAME=pci_epf_vnet
        #FUNCTION_NAME=pci_epf_virtio_net
        if [[ ! -e functions/$FUNCTION_NAME ]]; then
            FUNCTION_NAME=pci_epf_virtio_net
        fi
        mkdir -p functions/$FUNCTION_NAME/func1
        # echo 32 > functions/$FUNCTION_NAME/func1/msi_interrupts
        ln -s functions/$FUNCTION_NAME/func1 controllers/e65d0000.pcie-ep/ && sleep 1
        echo 1 > controllers/e65d0000.pcie-ep/start && sleep 1
        # ifconfig eth0 mtu 4082
        ifconfig eth0 192.168.10.22 up
        # mkdir /sys/kernel/config/rdma_cm/virtio_rdma_0
        echo "iperf3 is running in servermode (cmd: iperf3 -s)"
        iperf3 -s > /dev/null &
    else
        echo "This device is root complex"
        # ifconfig eth1 mtu 4082
        ifconfig eth1 192.168.10.1 up
        sleep 1s
        ping 192.168.10.22 -c 5 -s 64
    fi
    ;;
  stop)
    echo -n "Stopping  Endpoint function..."
    ifconfig eth0 down up
    cd /sys/kernel/config/pci_ep
    if [ "$(ls controllers/)" != "" ]; then
        echo 0 > controllers/e65d0000.pcie-ep/start && sleep 1
    fi
    ;;
  restart|reload)
    "$0" stop
    "$0" start
    ;;
  2start)
    echo "Starting Endpoint function test..."
    mount -t configfs none /sys/kernel/config
    cd /sys/kernel/config/pci_ep
    if [ "$(ls controllers/)" != "" ]; then
        mkdir -p functions/pci_epf_test/func1
        echo 0x1912 > functions/pci_epf_test/func1/vendorid
        echo 0x0031 > functions/pci_epf_test/func1/deviceid
        echo 32 > functions/pci_epf_test/func1/msi_interrupts
        ln -s functions/pci_epf_test/func1 controllers/e65d0000.pcie-ep/ && sleep 1
        echo 1 > controllers/e65d0000.pcie-ep/start && sleep 1
    else
        echo "This device is root complex"
    fi
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|test}"
    exit 1
esac

exit $?

